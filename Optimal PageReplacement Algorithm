#include<stdio.h>
#include<stdlib.h>

int search(int key,int fr[],int frame)
{
    for(int i=0;i<frame;i++)
    {
        if(fr[i]==key)
        {
            return 1;
        }
    }
    return 0;
}

int predict(int pg[],int fr[],int n,int fr_size,int index)
{
    int res=-1,farthest=index;
    for(int i=0;i<fr_size;i++)
    {
        int j;
        for(j=index;j<n;j++)
        {
            if(fr[i]==pg[i])
            {
                if(j>farthest)
                {
                    j=farthest;
                    res=i;
                }
                break;
            }
        }
        if(j==n)
        {
            return i;
        }
    }
    return (res==-1)?0:res;
}

void optimalPage(int pg[],int n,int frame)
{
    int*fr=(int*)malloc(frame*sizeof(int));
    int hit=0;
    for(int i=0;i<n;i++)
    {
        if(search(pg[i],fr,frame))
        {
            hit++;
            continue;
        }
        if(frame>0 && frame>i)
        {
            fr[i]=pg[i];
        }
        else
        {
            int j=predict(pg,fr,n,frame,i);
            fr[j]=pg[i];
        }
    }
    printf("\nNo. of hits = %d\t",hit-1);
    printf("\nNo. of miss =%d\t",n-hit+1);
    free(fr);
}
int main()
{
    int pg[100],n,frame;
    printf("\nenter page size: \t");
    scanf("%d",&n);
    printf("\nenter page elements:\n");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&pg[i]);
    }
    printf("\nenter frame size");
    scanf("%d",&frame);
    optimalPage(pg,n,frame);
    return 0;
}

















